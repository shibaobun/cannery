<div class="flex flex-col space-y-8 justify-center items-center">
  <h1 class="title text-2xl title-primary-500">
    <%= gettext("Catalog") %>
  </h1>

  <%= if @ammo_types |> Enum.empty?() and @search |> is_nil() do %>
    <h2 class="title text-xl text-primary-600">
      <%= gettext("No Ammo types") %>
      <%= display_emoji("ðŸ˜”") %>
    </h2>

    <.link patch={Routes.ammo_type_index_path(Endpoint, :new)} class="btn btn-primary">
      <%= dgettext("actions", "Add your first type!") %>
    </.link>
  <% else %>
    <.link patch={Routes.ammo_type_index_path(Endpoint, :new)} class="btn btn-primary">
      <%= dgettext("actions", "New Ammo type") %>
    </.link>

    <div class="w-full flex flex-col sm:flex-row justify-center items-center space-y-4 sm:space-y-0 sm:space-x-4 max-w-xl">
      <.form
        :let={f}
        for={:search}
        phx-change="search"
        phx-submit="search"
        class="grow self-stretch flex flex-col items-stretch"
      >
        <%= text_input(f, :search_term,
          class: "input input-primary",
          value: @search,
          phx_debounce: 300,
          placeholder: gettext("Search catalog")
        ) %>
      </.form>

      <.toggle_button action="toggle_show_used" value={@show_used}>
        <span class="title text-lg text-primary-600">
          <%= gettext("Show used") %>
        </span>
      </.toggle_button>
    </div>

    <%= if @ammo_types |> Enum.empty?() do %>
      <h2 class="title text-xl text-primary-600">
        <%= gettext("No Ammo types") %>
        <%= display_emoji("ðŸ˜”") %>
      </h2>
    <% else %>
      <.live_component
        module={CanneryWeb.Components.AmmoTypeTableComponent}
        id="ammo_types_index_table"
        action={@live_action}
        ammo_types={@ammo_types}
        current_user={@current_user}
        show_used={@show_used}
      >
        <:actions :let={ammo_type}>
          <div class="px-4 py-2 space-x-4 flex justify-center items-center">
            <.link
              navigate={Routes.ammo_type_show_path(Endpoint, :show, ammo_type)}
              class="text-primary-600 link"
              aria-label={
                dgettext("actions", "View %{ammo_type_name}", ammo_type_name: ammo_type.name)
              }
            >
              <i class="fa-fw fa-lg fas fa-eye"></i>
            </.link>

            <.link
              patch={Routes.ammo_type_index_path(Endpoint, :edit, ammo_type)}
              class="text-primary-600 link"
              aria-label={
                dgettext("actions", "Edit %{ammo_type_name}", ammo_type_name: ammo_type.name)
              }
            >
              <i class="fa-fw fa-lg fas fa-edit"></i>
            </.link>

            <.link
              patch={Routes.ammo_type_index_path(Endpoint, :clone, ammo_type)}
              class="text-primary-600 link"
              aria-label={
                dgettext("actions", "Clone %{ammo_type_name}", ammo_type_name: ammo_type.name)
              }
            >
              <i class="fa-fw fa-lg fas fa-copy"></i>
            </.link>

            <.link
              href="#"
              class="text-primary-600 link"
              phx-click="delete"
              phx-value-id={ammo_type.id}
              data-confirm={
                dgettext(
                  "prompts",
                  "Are you sure you want to delete %{name}? This will delete all %{name} type ammo as well!",
                  name: ammo_type.name
                )
              }
              aria-label={
                dgettext("actions", "Delete %{ammo_type_name}", ammo_type_name: ammo_type.name)
              }
            >
              <i class="fa-lg fas fa-trash"></i>
            </.link>
          </div>
        </:actions>
      </.live_component>
    <% end %>
  <% end %>
</div>

<.modal
  :if={@live_action in [:new, :edit, :clone]}
  return_to={Routes.ammo_type_index_path(Endpoint, :index)}
>
  <.live_component
    module={CanneryWeb.AmmoTypeLive.FormComponent}
    id={@ammo_type.id || :new}
    title={@page_title}
    action={@live_action}
    ammo_type={@ammo_type}
    return_to={Routes.ammo_type_index_path(Endpoint, :index)}
    current_user={@current_user}
    }
  />
</.modal>
