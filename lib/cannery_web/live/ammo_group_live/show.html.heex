<div class="mx-auto space-y-4 max-w-3xl flex flex-col justify-center items-center">
  <h1 class="title text-2xl title-primary-500">
    <%= @ammo_group.ammo_type.name %>
  </h1>

  <div class="space-y-2 flex flex-col justify-center items-center">
    <span class="rounded-lg title text-lg">
      <%= gettext("Count:") %>
      <%= @ammo_group.count %>
    </span>

    <span class="rounded-lg title text-lg">
      <%= gettext("Original count:") %>
      <%= Ammo.get_original_count(@ammo_group) %>
    </span>

    <span class="rounded-lg title text-lg">
      <%= gettext("Percentage left:") %>
      <%= gettext("%{percentage}%", percentage: @ammo_group |> Ammo.get_percentage_remaining()) %>
    </span>

    <%= if @ammo_group.notes do %>
      <span class="rounded-lg title text-lg">
        <%= gettext("Notes:") %>
        <%= @ammo_group.notes %>
      </span>
    <% end %>

    <span class="rounded-lg title text-lg">
      <%= gettext("Purchased on:") %>
      <.date date={@ammo_group.purchased_on} />
    </span>

    <%= if @ammo_group.price_paid do %>
      <span class="rounded-lg title text-lg">
        <%= gettext("Original cost:") %>
        <%= gettext("$%{amount}",
          amount: @ammo_group.price_paid |> :erlang.float_to_binary(decimals: 2)
        ) %>
      </span>

      <span class="rounded-lg title text-lg">
        <%= gettext("Current value:") %>
        <%= gettext("$%{amount}",
          amount:
            (@ammo_group.price_paid * Ammo.get_percentage_remaining(@ammo_group) / 100)
            |> :erlang.float_to_binary(decimals: 2)
        ) %>
      </span>
    <% end %>
  </div>

  <div class="flex flex-col justify-center items-center">
    <div class="flex flex-wrap justify-center items-center text-primary-600">
      <.link
        navigate={Routes.ammo_type_show_path(Endpoint, :show, @ammo_group.ammo_type)}
        class="mx-4 my-2 btn btn-primary"
        data-qa="details"
      >
        <%= dgettext("actions", "View in Catalog") %>
      </.link>

      <.link
        patch={Routes.ammo_group_show_path(Endpoint, :edit, @ammo_group)}
        class="mx-4 my-2 text-primary-600 link"
        data-qa="edit"
      >
        <i class="fa-fw fa-lg fas fa-edit"></i>
      </.link>

      <.link
        href="#"
        class="mx-4 my-2 text-primary-600 link"
        phx-click="delete"
        data-confirm={dgettext("prompts", "Are you sure you want to delete this ammo?")}
        data-qa="delete"
      >
        <i class="fa-fw fa-lg fas fa-trash"></i>
      </.link>
    </div>

    <div class="flex flex-wrap justify-center items-center text-primary-600">
      <button type="button" class="mx-4 my-2 btn btn-primary" phx-click="toggle_staged">
        <%= if @ammo_group.staged,
          do: dgettext("actions", "Unstage from range"),
          else: dgettext("actions", "Stage for range") %>
      </button>

      <.link
        patch={Routes.ammo_group_show_path(Endpoint, :move, @ammo_group)}
        class="btn btn-primary"
        data-qa="move"
      >
        <%= dgettext("actions", "Move containers") %>
      </.link>

      <.link
        patch={Routes.ammo_group_show_path(Endpoint, :add_shot_group, @ammo_group)}
        class="mx-4 my-2 btn btn-primary"
      >
        <%= dgettext("actions", "Record shots") %>
      </.link>
    </div>
  </div>

  <hr class="mb-4 w-full" />

  <div>
    <%= if @ammo_group.container do %>
      <h1 class="mb-4 px-4 py-2 text-center rounded-lg title text-xl">
        <%= gettext("Stored in") %>
      </h1>

      <.container_card container={@ammo_group.container} />
    <% else %>
      <%= gettext("This ammo is not in a container") %>
    <% end %>
  </div>

  <%= unless @ammo_group.shot_groups |> Enum.empty?() do %>
    <hr class="mb-4 w-full" />

    <h1 class="mb-4 px-4 py-2 text-center rounded-lg title text-xl">
      <%= gettext("Rounds used") %>
    </h1>

    <.live_component
      module={CanneryWeb.Components.TableComponent}
      id="ammo_group_shot_groups_table"
      columns={@columns}
      rows={@rows}
    />
  <% end %>
</div>

<%= case @live_action do %>
  <% :edit -> %>
    <.modal return_to={Routes.ammo_group_show_path(Endpoint, :show, @ammo_group)}>
      <.live_component
        module={CanneryWeb.AmmoGroupLive.FormComponent}
        id={@ammo_group.id}
        title={@page_title}
        action={@live_action}
        ammo_group={@ammo_group}
        return_to={Routes.ammo_group_show_path(Endpoint, :show, @ammo_group)}
        current_user={@current_user}
      />
    </.modal>
  <% :edit_shot_group -> %>
    <.modal return_to={Routes.ammo_group_show_path(Endpoint, :show, @ammo_group)}>
      <.live_component
        module={CanneryWeb.RangeLive.FormComponent}
        id={@shot_group.id}
        title={@page_title}
        action={@live_action}
        shot_group={@shot_group}
        return_to={Routes.ammo_group_show_path(Endpoint, :show, @ammo_group)}
        current_user={@current_user}
      />
    </.modal>
  <% :add_shot_group -> %>
    <.modal return_to={Routes.ammo_group_show_path(Endpoint, :show, @ammo_group)}>
      <.live_component
        module={CanneryWeb.Components.AddShotGroupComponent}
        id={:new}
        title={@page_title}
        action={@live_action}
        ammo_group={@ammo_group}
        return_to={Routes.ammo_group_show_path(Endpoint, :show, @ammo_group)}
        current_user={@current_user}
      />
    </.modal>
  <% :move -> %>
    <.modal return_to={Routes.ammo_group_show_path(Endpoint, :show, @ammo_group)}>
      <.live_component
        module={CanneryWeb.Components.MoveAmmoGroupComponent}
        id={@ammo_group.id}
        title={@page_title}
        action={@live_action}
        ammo_group={@ammo_group}
        return_to={Routes.ammo_group_show_path(Endpoint, :show, @ammo_group)}
        current_user={@current_user}
      />
    </.modal>
  <% _show -> %>
<% end %>
